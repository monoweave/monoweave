name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

env:
  ARTIFACT_DIR: ./artifacts

permissions:
  contents: write
  pull-requests: write
  checks: write
  actions: write
  statuses: write
  pages: write

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/setup-env
      - name: Validate Constraints
        run: yarn constraints

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: [prepare]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/setup-env
      - name: Typecheck
        run: yarn typecheck

  tests:
    name: Lint & Tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: [prepare]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/setup-env
      - name: Build
        run: yarn build
      - name: Linting
        run: yarn lint:ci
      - name: Tests
        run: yarn test:ci
      - name: Upload Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage-unit-tests
          path: ./raw-coverage/vitest

  tests_e2es:
    name: Tests - End to End - ${{ matrix.runner }} / Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.runner}}
    needs: [prepare]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        runner: ['ubuntu-latest']
        node-version: ['lts/jod', 'current']
    continue-on-error: ${{ matrix.node-version == 'current' }}
    steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        - uses: ./.github/actions/setup-env
          with:
            cache-prefix: ${{ matrix.runner }}
            node-version: ${{ matrix.node-version }}
        - name: Run Tests
          run: yarn test:e2e
        - name: Upload Artifacts
          uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
          if: matrix.runner == 'ubuntu-latest' && matrix.node-version == 'lts/iron'
          with:
            name: coverage-e2e-tests
            path: ./raw-coverage/vitest-e2es

  test_report:
    name: Test Report
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: [tests_e2es, tests, prepare]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/setup-env
      - name: Download Unit Test Coverage
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: coverage-unit-tests
          path: ./raw-coverage/vitest
      - name: Download E2E Coverage
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: coverage-e2e-tests
          path: ./raw-coverage/vitest-e2es
      - name: Log Coverage Files (Vitest Unit)
        run: ls -la ./raw-coverage/vitest
      - name: Log Coverage Files (Vitest E2Es)
        run: ls -la ./raw-coverage/vitest-e2es
      - name: Merge Coverage
        run: yarn test:coverage:merge
      - name: Generate Report
        run: yarn test:coverage:report
      - name: Upload Coverage Report
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ env.ARTIFACT_DIR }}

  tests_compatibility:
    name: Test Compatibility - ${{ matrix.runner }} / Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.runner}}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: [prepare]
    strategy:
      matrix:
        runner: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        node-version: ['24.5.0']
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/setup-env
        id: setup
        with:
          node-version: ${{ matrix.node-version }}
          cache-prefix: ${{ matrix.runner }}
      - name: Build
        run: yarn build
      - name: Tests
        env:
          NODE_VERSION: ${{ matrix.node-version }}
        run: yarn test:ci
      - name: Upload Artifacts
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: report-artifacts-${{ matrix.runner }}-${{ steps.setup.outputs.node-version }}
          path: ${{ env.ARTIFACT_DIR }}

  publish_preview:
    name: Publish Preview
    runs-on: ubuntu-latest
    needs: [prepare, test_report]
    if: "github.event_name == 'pull_request' && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: ./.github/actions/setup-env

      - name: Preview
        uses: monoweave/github-action-preview@main
        with:
          token: ${{ github.token }}
          monoweave-command: yarn run-local

  website:
    name: Website
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: [prepare, test_report]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/actions/setup-env
      - name: Build Website
        if: "github.event_name == 'pull_request'"
        run: yarn docs
      - name: Build & Deploy Website
        if: "github.event_name == 'push' && github.ref == 'refs/heads/main'"
        run: |
          git checkout gh-pages
          git reset --hard main
          yarn docs
          git add docs
          git commit -m "chore: update website" -n
          git push --force origin gh-pages

  required_checks:
    name: Required Checks
    needs:
      - prepare
      - publish_preview
      - test_report
      - typecheck
      - tests
      - tests_compatibility
      - tests_e2es
      - website
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Fail on error
        if: contains(needs.*.result, 'failure') || cancelled()
        run: exit 1
